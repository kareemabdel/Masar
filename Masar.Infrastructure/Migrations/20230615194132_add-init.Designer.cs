// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Masar.Infrastructure.ApplicationContext;

#nullable disable

namespace Masar.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230615194132_add-init")]
    partial class addinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Masar.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8667a9bf-c714-43cc-9a3c-fd3981c8a3d8"),
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 294, DateTimeKind.Unspecified).AddTicks(79), new TimeSpan(0, 3, 0, 0, 0)),
                            Email = "admin@company.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Admin admin ",
                            Password = "iBbtmDi0qFeHHFgh+IXz5GklG0Jqy75i81vlpg136MY=",
                            Phone = "11111111111",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Masar.Domain.Entities.ApplicationUserRoles", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ApplicationUserRole");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8667a9bf-c714-43cc-9a3c-fd3981c8a3d8"),
                            RoleId = 1,
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 294, DateTimeKind.Unspecified).AddTicks(183), new TimeSpan(0, 3, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Masar.Domain.Entities.Cities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ArabicDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnglishDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c14d826b-ce78-4c02-a45e-ade4ffa89d64"),
                            ArabicDescription = "شرم الشيخ",
                            Code = "01",
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 293, DateTimeKind.Unspecified).AddTicks(9674), new TimeSpan(0, 3, 0, 0, 0)),
                            EnglishDescription = "Sharm",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("45b79a7b-f9a6-4263-b421-ac34a588114e"),
                            ArabicDescription = "الغردقة",
                            Code = "02",
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 293, DateTimeKind.Unspecified).AddTicks(9860), new TimeSpan(0, 3, 0, 0, 0)),
                            EnglishDescription = "Hurghada",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6af46bf4-84d4-42d2-8c18-ee61e6ee884c"),
                            ArabicDescription = "دهب",
                            Code = "03",
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 293, DateTimeKind.Unspecified).AddTicks(9866), new TimeSpan(0, 3, 0, 0, 0)),
                            EnglishDescription = "Dahab",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("76b6ea88-9ec6-403c-a29c-166ae4e4be3b"),
                            ArabicDescription = "واحة الفيوم",
                            Code = "04",
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 293, DateTimeKind.Unspecified).AddTicks(9870), new TimeSpan(0, 3, 0, 0, 0)),
                            EnglishDescription = "Fayoum Oasis",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0e72dfe1-3273-49b0-9115-a6a37ed864cb"),
                            ArabicDescription = "رأس البر",
                            Code = "05",
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 293, DateTimeKind.Unspecified).AddTicks(9875), new TimeSpan(0, 3, 0, 0, 0)),
                            EnglishDescription = "Ras El Bar",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Masar.Domain.Entities.Comman.AuditTrial", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AuditActionType")
                        .HasColumnType("int");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DataModel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("DateTimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KeyFieldID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ValueAfter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ValueBefore")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("AuditTrial");
                });

            modelBuilder.Entity("Masar.Domain.Entities.Gallery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("Masar.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 294, DateTimeKind.Unspecified).AddTicks(117), new TimeSpan(0, 3, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Admin",
                            NameAr = "مدير"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTimeOffset(new DateTime(2023, 6, 15, 22, 41, 32, 294, DateTimeKind.Unspecified).AddTicks(152), new TimeSpan(0, 3, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User",
                            NameAr = "مستخدم"
                        });
                });

            modelBuilder.Entity("Masar.Domain.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxReservations")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("TripStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("CityId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Masar.Domain.Entities.TripPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("TripId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripPhoto");
                });

            modelBuilder.Entity("Masar.Domain.Entities.UserTrip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NumberOfIndividuals")
                        .HasColumnType("int");

                    b.Property<double>("ReservationCost")
                        .HasColumnType("double");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTrip");
                });

            modelBuilder.Entity("Masar.Domain.Entities.UserTripStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChagedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DeletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserTripId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ChagedById");

                    b.HasIndex("UserTripId");

                    b.ToTable("UserTripStatusHistory");
                });

            modelBuilder.Entity("Masar.Domain.Entities.ApplicationUserRoles", b =>
                {
                    b.HasOne("Masar.Domain.Entities.Role", "Role")
                        .WithMany("RoleUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Masar.Domain.Entities.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Masar.Domain.Entities.Gallery", b =>
                {
                    b.HasOne("Masar.Domain.Entities.ApplicationUser", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddedBy");
                });

            modelBuilder.Entity("Masar.Domain.Entities.Trip", b =>
                {
                    b.HasOne("Masar.Domain.Entities.ApplicationUser", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Masar.Domain.Entities.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Masar.Domain.Entities.TripPhoto", b =>
                {
                    b.HasOne("Masar.Domain.Entities.Trip", "Trip")
                        .WithMany("TripPhotos")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Masar.Domain.Entities.UserTrip", b =>
                {
                    b.HasOne("Masar.Domain.Entities.Trip", "Trip")
                        .WithMany("UserTrips")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Masar.Domain.Entities.ApplicationUser", "User")
                        .WithMany("UserTrips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Masar.Domain.Entities.UserTripStatusHistory", b =>
                {
                    b.HasOne("Masar.Domain.Entities.ApplicationUser", "ChagedBy")
                        .WithMany()
                        .HasForeignKey("ChagedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Masar.Domain.Entities.UserTrip", "UserTrip")
                        .WithMany("UserTripStatusHistory")
                        .HasForeignKey("UserTripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChagedBy");

                    b.Navigation("UserTrip");
                });

            modelBuilder.Entity("Masar.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("UserTrips");
                });

            modelBuilder.Entity("Masar.Domain.Entities.Role", b =>
                {
                    b.Navigation("RoleUsers");
                });

            modelBuilder.Entity("Masar.Domain.Entities.Trip", b =>
                {
                    b.Navigation("TripPhotos");

                    b.Navigation("UserTrips");
                });

            modelBuilder.Entity("Masar.Domain.Entities.UserTrip", b =>
                {
                    b.Navigation("UserTripStatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
